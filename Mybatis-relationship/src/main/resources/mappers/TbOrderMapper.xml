<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mvc.controller.DemoController.yjl.TbOrderMapper">
    <!-- 创建resultMap实现“对一”关联关系映射 -->
    <!-- id属性：通常设置为这个resultMap所服务的那条SQL语句的id加上“ResultMap” -->
    <!-- type属性：要设置为这个resultMap所服务的那条SQL语句最终要返回的类型 -->
    <resultMap id="selectOrderAndCustomerResultMap" type="com.spring.mvc.controller.DemoController.yjl.TbOrder">
        <id column="order_id" property="orderId"/>
        <result column="order_name" property="orderName"/>
        <result column="customerId" property="customerId"/>
        <!-- 使用association标签配置“对一”关联关系 -->
        <!-- property属性：在Order类中对一的一端进行引用时使用的属性名 -->
        <!-- javaType属性：一的一端类的全类名 -->
        <association property="customer" javaType="com.spring.mvc.controller.DemoController.yjl.TbCustomer">
            <!-- 配置Customer类的属性和字段名之间的对应关系 -->
            <id column="customer_id" property="customerId"/>
            <result column="customer_name" property="customerName"/>
        </association>
    </resultMap>

    <select id="selectOrderAndCustomer" resultMap="selectOrderAndCustomerResultMap">
           select
                tbo.order_id,tbo.order_name,tbo.customer_id,tc.customer_id,tc.customer_name
            from tb_order tbo
            left join tb_customer tc on tbo.customer_id = tc.customer_id
            where tbo.order_id=#{orderId}
    </select>

    <select id="selectOrderAll" resultMap="selectOrderAndCustomerResultMap">
        select * from tb_order
    </select>

</mapper>