<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper是根标签。namespace属性是找到当前配置的依据 -->
<!-- 由于最理想的Mybatis使用方式是：通过Mapper接口调用接口方法，访问数据库 -->
<!-- 这样的理想方式要求：能够通过接口全类名找到Mapper配置 -->
<!-- 所以：我们就用Mapper接口的全类名来给namespace属性赋值 -->
<mapper namespace="com.spring.mvc.controller.DemoController.yjl.ssm.mapper.EmpMapper">

    <!-- List<Emp> selectAll(); -->
    <select id="selectAll" resultType="com.spring.mvc.controller.DemoController.yjl.ssm.entity.Emp">
        select emp_id,emp_name,emp_salary from tb_emp
    </select>

    <!-- void deleteByPrimaryKey(Integer empId); -->
    <delete id="deleteByPrimaryKey">
        delete from tb_emp where emp_id=#{empId}
    </delete>

    <!-- void insertEmp(Emp emp); -->
    <insert id="insertEmp">
        insert into tb_emp(emp_name,emp_salary) values(#{empName},#{empSalary})
    </insert>

    <!-- Emp selectByPrimaryKey(Integer empId); -->
    <select id="selectByPrimaryKey" resultType="com.spring.mvc.controller.DemoController.yjl.ssm.entity.Emp">
        select emp_id,emp_name,emp_salary from tb_emp where emp_id=#{empId}
    </select>

    <!-- void updateEmpByPrimaryKey(Emp emp); -->
    <update id="updateEmpByPrimaryKey">
        update tb_emp set emp_name=#{empName},emp_salary=#{empSalary}
        where emp_id=#{empId}
    </update>

</mapper>